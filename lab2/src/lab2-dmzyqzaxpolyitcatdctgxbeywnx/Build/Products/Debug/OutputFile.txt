The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 0
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 0
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adLMatrix in Dijkstra method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 0
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 21
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 21
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 26
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 26
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 23
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 10
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 11
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 20
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adList in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adLMatrix in Dijkstra method.
The total cost is: 11
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 8
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 2
The method is adjList in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in DFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adList in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 4
The method is adjList in DFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in DFS of recusive method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 16
The method is adjList in DFS of recusive method.
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjMatrix in DFS of recusive method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in BFS of recusive method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 16
The method is adjList in DFS of recusive method.
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjMatrix in DFS of recusive method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in BFS of recusive method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 16
The method is adjList in DFS of recusive method.
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjMatrix in DFS of recusive method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in BFS of recusive method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 16
The method is adjList in DFS of recusive method.
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjMatrix in DFS of recusive method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in BFS of recusive method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 16
The method is adjList in DFS of recusive method.
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjMatrix in DFS of recusive method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in BFS of recusive method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 16
The method is adjList in DFS of recusive method.
The total cost is: 25
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjMatrix in DFS of recusive method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 21
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in BFS of recusive method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: -1.58456e+29
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adList in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 6
The method is adjList in DFS of recusive method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in DFS of recusive method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 11
The method is adjList in DFS of recusive method.
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28


The method is adjMatrix in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 14
The total nodes in returned path is: 11
The total nodes explored in path is: 11
The total distance is: 28

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 10
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 9
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 4
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 15
The method is adjList in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjMatrix in DFS of recusive method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 24
The total nodes in returned path is: 15
The total nodes explored in path is: 15
The total distance is: 41


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14


The method is adLMatrix in Dijkstra method.
The total cost is: 4
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 7
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 2
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 8
The method is adjList in DFS of recusive method.
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16


The method is adjMatrix in DFS of recusive method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 10
The total nodes in returned path is: 8
The total nodes explored in path is: 8
The total distance is: 16

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 18
The total nodes in returned path is: 16
The total nodes explored in path is: 16
The total distance is: 42


The method is adjList in BFS of recusive method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 4
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15


The method is adList in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3


The method is adLMatrix in Dijkstra method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 11
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 6
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 19
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 19
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 19
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 19
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 19
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 19
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 19
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 19
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 19
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 2
The total nodes in returned path is: 12
The total nodes explored in path is: 12
The total distance is: 29


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 5
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 7
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adList in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1


The method is adLMatrix in Dijkstra method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 8
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 1
The total nodes in returned path is: 2
The total nodes explored in path is: 2
The total distance is: 1

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 9
The total nodes in returned path is: 6
The total nodes explored in path is: 6
The total distance is: 14

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 13
The total nodes in returned path is: 10
The total nodes explored in path is: 10
The total distance is: 27

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 5
The total nodes explored in path is: 5
The total distance is: 13


The method is adList in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26


The method is adLMatrix in Dijkstra method.
The total cost is: 8
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 6
The total nodes in returned path is: 9
The total nodes explored in path is: 9
The total distance is: 26

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 5
The total nodes in returned path is: 4
The total nodes explored in path is: 4
The total distance is: 3

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 17
The total nodes in returned path is: 13
The total nodes explored in path is: 13
The total distance is: 39

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 7
The total nodes in returned path is: 7
The total nodes explored in path is: 7
The total distance is: 15

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adList in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2


The method is adLMatrix in Dijkstra method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is adList in A* method.
The total cost is: 13
The total nodes in returned path is: 14
The total nodes explored in path is: 14
The total distance is: 40

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2


The method is dMatrix in A* method.
The total cost is: 3
The total nodes in returned path is: 3
The total nodes explored in path is: 3
The total distance is: 2

Print F(n) for A* method in adjList:F(n) = distance(1+cost)
F(1)=2
F(2)=2
F(3)=2
F(4)=10
F(5)=2
F(6)=2
F(7)=2
F(8)=10
F(9)=2
F(10)=2
F(11)=2
F(12)=10
F(13)=2
F(14)=2
F(15)=2

The iterative path for adjlist in DFS method is: 
The method is adjList in DFS of iterative method
The total cost is: 991.309
The total nodes in returned path is: 1995
The total nodes explored in path is: 1995
The total distance is: 95633

The iterative path for adjMatrix in DFS method is: 
The method is adjMatrix in DFS of iterative method.
The total cost is: 688.833
The total nodes in returned path is: 1391
The total nodes explored in path is: 1391
The total distance is: 66217

The iterative path for adjList in BFS is: 
The method is adjList in BFS of iterative method.
The total cost is: 0.344
The total nodes in returned path is: 2097
The total nodes explored in path is: 2097
The total distance is: 100537

The iterative path for adjMatrix in BFS 
The method is adjMatrix in BFS of iterative method.
The total cost is: 0.913
The total nodes in returned path is: 2061
The total nodes explored in path is: 2061
The total distance is: 100501

The method is adjList in DFS of recusive method.
The total nodes explored in path is: 1
The method is adjList in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjList in BFS of recusive method.
The total cost is: 0.344
The total nodes in returned path is: 2097
The total nodes explored in path is: 2097
The total distance is: 100537


The method is adjMatrix in DFS of recusive method.
The total cost is: 0
The total nodes in returned path is: 1
The total nodes explored in path is: 1
The total distance is: 0


The method is adjMatrix in BFS of recusive method.
The total cost is: 0.913
The total nodes in returned path is: 2061
The total nodes explored in path is: 2061
The total distance is: 100501

